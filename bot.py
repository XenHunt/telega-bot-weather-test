from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command, CommandStart
import asyncio

import logging

import requests
from config import config
from models import manualAdd

bot = Bot(config["BOT_TOKEN"])

dp = Dispatcher()


@dp.message(Command("weather"))
async def get_weather(msg: types.Message):
    text = msg.text
    user = msg.from_user
    if user is None:
        await msg.answer("–¢—ã –Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        manualAdd("None", text if text is not None else "Error", "–¢—ã –Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        return
    if text is None or len(text.split()) != 2:
        await msg.answer("–ù–µ –∫–æ—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ (\\weather <–Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞>)")
        manualAdd(
            user.full_name,
            text if text is not None else "Error",
            "–ù–µ –∫–æ—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ (\\weather <–Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞>)",
        )
        return
    username = user.full_name
    city = text.split()[1]
    url = f"https://ru.api.openweathermap.org/data/2.5/weather?q={city}&appid={config['WEATHER_TOKEN']}&units=metric&lang=ru"
    response = requests.get(url)

    if response.status_code == 200:
        data = response.json()
        weather, temp, wind = data["weather"][0], data["main"], data["wind"]

        ans = f"–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city}:\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞üå°Ô∏è - {temp['temp']}¬∞C\n–û—â—É—â–∞–µ—Ç—Å—èüß• –∫–∞–∫ {temp['feels_like']}¬∞C\n–ü–æ–≥–æ–¥–∞‚òÅÔ∏è - {weather['main']}, {weather['description']}\n–í–ª–∞–∂–Ω–æ—Å—Ç—åüíß - {temp['humidity']}\n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞üå¨Ô∏è - {wind['speed']} –º/—Å"
        await msg.answer(ans)
    else:
        ans = "Incorrect city or service (openweather) is down."
        await msg.answer(ans)

    manualAdd(username, text, ans)


@dp.message(CommandStart())
async def cmd_start(msg: types.Message):
    user = msg.from_user
    if user is None:
        await msg.answer("–¢—ã –Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        manualAdd("None", "/start", "–¢—ã –Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        return
    username = user.full_name
    ans = "–í—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏ –±–æ—Ç–∞ BobrAI –¥–ª—è –≤—ã—è—Å–Ω–µ–∏–µ—è –ø–æ–≥–æ–¥—ã\n–û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–º–º–∞–Ω–¥–∞: \\weather <–Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞>; –¥–ª—è –≤—ã—è—Å–Ω–µ–Ω–∏–µ—è –Ω—ã–Ω–µ—à–Ω–µ–π –ø–æ–≥–æ–¥—ã –≤ –≥–æ—Ä–æ–¥–µ"
    manualAdd(username, "/start", ans)
    await msg.answer(ans)


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("Exit")
